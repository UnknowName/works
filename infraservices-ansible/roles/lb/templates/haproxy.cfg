#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    60s
    timeout queue           1m
    timeout connect         20s
    timeout client          2m
    timeout server          2m
    timeout http-keep-alive 20s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
listen elas-9200
    bind 0.0.0.0:9200
    mode   tcp
    maxconn   2000
    # acl es src 10.149.128.0/24
    # tcp-request content reject if !es
    {% for server in groups['elas'] -%}
    server {{ server }} {{ server }}:9200 rise 2 fall 3
    {% endfor %}

listen elas-9300
    bind 0.0.0.0:9300
    mode   tcp
    maxconn   2000
    # acl elas src 10.149.128.0/24
    # tcp-request content reject if !elas
    {% for server in groups['elas'] -%}
    server {{ server }} {{ server }}:9300 rise 2 fall 3
    {% endfor %}

listen  kafka
    bind 0.0.0.0:9092
    mode   tcp
    maxconn   2000
    {% for server in groups['kafka'] -%}
    server {{ server }} {{ server }}:9092 rise 2 fall 3
    {% endfor %}

listen  rabbitmq
    bind 0.0.0.0:5672
    mode   tcp
    maxconn   2000
    {% for server in groups['rabbitmq'] -%}
    server {{ server }} {{ server }}:5672 rise 2 fall 3
    {% endfor %}

listen  hazelcast
    bind 0.0.0.0:5701
    mode   tcp
    maxconn   2000
    {% for server in groups['hazelcast'] -%}
    server {{ server }} {{ server }}:5701 rise 2 fall 3
    {% endfor %}

listen fastdfs
  bind 0.0.0.0:8080
  mode tcp
  maxconn 2000
  {% for server in groups['fastdfs'] -%}
  server {{ server }} {{ server }}:8080 rise 2 fall 3
  {% endfor %}
